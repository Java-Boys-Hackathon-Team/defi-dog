/*
 * Sourcify APIv2
 * Welcome to the Sourcify's APIv2.  Important differences between the deprecated legacy API and the new APIv2: - **Ticketing**: The verfication requests resolve into tickets/verification jobs.    - Previously the verification happened during the HTTP request, which resulted in timeouts if compilation took longer - **Standard JSON as default**: In the current design we take the standard JSON format as our main verification endpoint. We still support verification with metadata at `/v2/verify/metadata`. - **Lean API**: We keep the number of endpoints minimal compared to v1. We won't have a session API.  - **Detailed contract response**: Prev. we only returned contract files of a contract. Now we can return details at `/contract/{chainId}/{address}`.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: hello@sourcify.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.javaboys.defidog.integrations.sourcify.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * GetContract200ResponseAllOfStdJsonOutputContractsValueValue
 */
@JsonPropertyOrder({
  GetContract200ResponseAllOfStdJsonOutputContractsValueValue.JSON_PROPERTY_ABI,
  GetContract200ResponseAllOfStdJsonOutputContractsValueValue.JSON_PROPERTY_USERDOC,
  GetContract200ResponseAllOfStdJsonOutputContractsValueValue.JSON_PROPERTY_DEVDOC,
  GetContract200ResponseAllOfStdJsonOutputContractsValueValue.JSON_PROPERTY_STORAGE_LAYOUT,
  GetContract200ResponseAllOfStdJsonOutputContractsValueValue.JSON_PROPERTY_METADATA,
  GetContract200ResponseAllOfStdJsonOutputContractsValueValue.JSON_PROPERTY_EVM
})
@JsonTypeName("get_contract_200_response_allOf_stdJsonOutput_contracts_value_value")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-08T01:55:37.009934+03:00[Europe/Moscow]", comments = "Generator version: 7.7.0")
public class GetContract200ResponseAllOfStdJsonOutputContractsValueValue {
  public static final String JSON_PROPERTY_ABI = "abi";
  private List<Object> abi = new ArrayList<>();

  public static final String JSON_PROPERTY_USERDOC = "userdoc";
  private Object userdoc;

  public static final String JSON_PROPERTY_DEVDOC = "devdoc";
  private Object devdoc;

  public static final String JSON_PROPERTY_STORAGE_LAYOUT = "storageLayout";
  private Object storageLayout;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private String metadata;

  public static final String JSON_PROPERTY_EVM = "evm";
  private GetContract200ResponseAllOfStdJsonOutputContractsValueValueEvm evm;

  public GetContract200ResponseAllOfStdJsonOutputContractsValueValue() {
  }

  public GetContract200ResponseAllOfStdJsonOutputContractsValueValue abi(List<Object> abi) {
    
    this.abi = abi;
    return this;
  }

  public GetContract200ResponseAllOfStdJsonOutputContractsValueValue addAbiItem(Object abiItem) {
    if (this.abi == null) {
      this.abi = new ArrayList<>();
    }
    this.abi.add(abiItem);
    return this;
  }

  /**
   * Get abi
   * @return abi
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ABI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getAbi() {
    return abi;
  }


  @JsonProperty(JSON_PROPERTY_ABI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAbi(List<Object> abi) {
    this.abi = abi;
  }

  public GetContract200ResponseAllOfStdJsonOutputContractsValueValue userdoc(Object userdoc) {
    
    this.userdoc = userdoc;
    return this;
  }

  /**
   * Get userdoc
   * @return userdoc
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USERDOC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getUserdoc() {
    return userdoc;
  }


  @JsonProperty(JSON_PROPERTY_USERDOC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserdoc(Object userdoc) {
    this.userdoc = userdoc;
  }

  public GetContract200ResponseAllOfStdJsonOutputContractsValueValue devdoc(Object devdoc) {
    
    this.devdoc = devdoc;
    return this;
  }

  /**
   * Get devdoc
   * @return devdoc
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVDOC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getDevdoc() {
    return devdoc;
  }


  @JsonProperty(JSON_PROPERTY_DEVDOC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDevdoc(Object devdoc) {
    this.devdoc = devdoc;
  }

  public GetContract200ResponseAllOfStdJsonOutputContractsValueValue storageLayout(Object storageLayout) {
    
    this.storageLayout = storageLayout;
    return this;
  }

  /**
   * Get storageLayout
   * @return storageLayout
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STORAGE_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getStorageLayout() {
    return storageLayout;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStorageLayout(Object storageLayout) {
    this.storageLayout = storageLayout;
  }

  public GetContract200ResponseAllOfStdJsonOutputContractsValueValue metadata(String metadata) {
    
    this.metadata = metadata;
    return this;
  }

  /**
   * Serialized JSON string
   * @return metadata
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  public GetContract200ResponseAllOfStdJsonOutputContractsValueValue evm(GetContract200ResponseAllOfStdJsonOutputContractsValueValueEvm evm) {
    
    this.evm = evm;
    return this;
  }

  /**
   * Get evm
   * @return evm
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetContract200ResponseAllOfStdJsonOutputContractsValueValueEvm getEvm() {
    return evm;
  }


  @JsonProperty(JSON_PROPERTY_EVM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvm(GetContract200ResponseAllOfStdJsonOutputContractsValueValueEvm evm) {
    this.evm = evm;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetContract200ResponseAllOfStdJsonOutputContractsValueValue getContract200ResponseAllOfStdJsonOutputContractsValueValue = (GetContract200ResponseAllOfStdJsonOutputContractsValueValue) o;
    return Objects.equals(this.abi, getContract200ResponseAllOfStdJsonOutputContractsValueValue.abi) &&
        Objects.equals(this.userdoc, getContract200ResponseAllOfStdJsonOutputContractsValueValue.userdoc) &&
        Objects.equals(this.devdoc, getContract200ResponseAllOfStdJsonOutputContractsValueValue.devdoc) &&
        Objects.equals(this.storageLayout, getContract200ResponseAllOfStdJsonOutputContractsValueValue.storageLayout) &&
        Objects.equals(this.metadata, getContract200ResponseAllOfStdJsonOutputContractsValueValue.metadata) &&
        Objects.equals(this.evm, getContract200ResponseAllOfStdJsonOutputContractsValueValue.evm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abi, userdoc, devdoc, storageLayout, metadata, evm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetContract200ResponseAllOfStdJsonOutputContractsValueValue {\n");
    sb.append("    abi: ").append(toIndentedString(abi)).append("\n");
    sb.append("    userdoc: ").append(toIndentedString(userdoc)).append("\n");
    sb.append("    devdoc: ").append(toIndentedString(devdoc)).append("\n");
    sb.append("    storageLayout: ").append(toIndentedString(storageLayout)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    evm: ").append(toIndentedString(evm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

