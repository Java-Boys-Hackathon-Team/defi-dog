/*
 * Sourcify APIv2
 * Welcome to the Sourcify's APIv2.  Important differences between the deprecated legacy API and the new APIv2: - **Ticketing**: The verfication requests resolve into tickets/verification jobs.    - Previously the verification happened during the HTTP request, which resulted in timeouts if compilation took longer - **Standard JSON as default**: In the current design we take the standard JSON format as our main verification endpoint. We still support verification with metadata at `/v2/verify/metadata`. - **Lean API**: We keep the number of endpoints minimal compared to v1. We won't have a session API.  - **Detailed contract response**: Prev. we only returned contract files of a contract. Now we can return details at `/contract/{chainId}/{address}`.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: hello@sourcify.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.javaboys.defidog.integrations.sourcify.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;
import java.util.UUID;

/**
 * GenericErrorResponse
 */
@JsonPropertyOrder({
  GenericErrorResponse.JSON_PROPERTY_CUSTOM_CODE,
  GenericErrorResponse.JSON_PROPERTY_MESSAGE,
  GenericErrorResponse.JSON_PROPERTY_ERROR_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-08T01:55:37.009934+03:00[Europe/Moscow]", comments = "Generator version: 7.7.0")
public class GenericErrorResponse {
  public static final String JSON_PROPERTY_CUSTOM_CODE = "customCode";
  private String customCode;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public static final String JSON_PROPERTY_ERROR_ID = "errorId";
  private UUID errorId;

  public GenericErrorResponse() {
  }

  public GenericErrorResponse customCode(String customCode) {
    
    this.customCode = customCode;
    return this;
  }

  /**
   * A string token to indicate the reason of the error
   * @return customCode
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOM_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomCode() {
    return customCode;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomCode(String customCode) {
    this.customCode = customCode;
  }

  public GenericErrorResponse message(String message) {
    
    this.message = message;
    return this;
  }

  /**
   * The reasoning of the error
   * @return message
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessage(String message) {
    this.message = message;
  }

  public GenericErrorResponse errorId(UUID errorId) {
    
    this.errorId = errorId;
    return this;
  }

  /**
   * Get errorId
   * @return errorId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ERROR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getErrorId() {
    return errorId;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setErrorId(UUID errorId) {
    this.errorId = errorId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenericErrorResponse genericErrorResponse = (GenericErrorResponse) o;
    return Objects.equals(this.customCode, genericErrorResponse.customCode) &&
        Objects.equals(this.message, genericErrorResponse.message) &&
        Objects.equals(this.errorId, genericErrorResponse.errorId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customCode, message, errorId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenericErrorResponse {\n");
    sb.append("    customCode: ").append(toIndentedString(customCode)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    errorId: ").append(toIndentedString(errorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

