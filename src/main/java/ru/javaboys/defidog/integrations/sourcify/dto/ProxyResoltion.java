/*
 * Sourcify APIv2
 * Welcome to the Sourcify's APIv2.  Important differences between the deprecated legacy API and the new APIv2: - **Ticketing**: The verfication requests resolve into tickets/verification jobs.    - Previously the verification happened during the HTTP request, which resulted in timeouts if compilation took longer - **Standard JSON as default**: In the current design we take the standard JSON format as our main verification endpoint. We still support verification with metadata at `/v2/verify/metadata`. - **Lean API**: We keep the number of endpoints minimal compared to v1. We won't have a session API.  - **Detailed contract response**: Prev. we only returned contract files of a contract. Now we can return details at `/contract/{chainId}/{address}`.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: hello@sourcify.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.javaboys.defidog.integrations.sourcify.dto;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ProxyResoltion
 */
@JsonPropertyOrder({
  ProxyResoltion.JSON_PROPERTY_IS_PROXY,
  ProxyResoltion.JSON_PROPERTY_PROXY_TYPE,
  ProxyResoltion.JSON_PROPERTY_IMPLEMENTATIONS,
  ProxyResoltion.JSON_PROPERTY_PROXY_RESOLUTION_ERROR
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-08T01:55:37.009934+03:00[Europe/Moscow]", comments = "Generator version: 7.7.0")
public class ProxyResoltion {
  public static final String JSON_PROPERTY_IS_PROXY = "isProxy";
  private Boolean isProxy;

  /**
   * Gets or Sets proxyType
   */
  public enum ProxyTypeEnum {
    EIP1167_PROXY("EIP1167Proxy"),
    
    FIXED_PROXY("FixedProxy"),
    
    EIP1967_PROXY("EIP1967Proxy"),
    
    GNOSIS_SAFE_PROXY("GnosisSafeProxy"),
    
    DIAMOND_PROXY("DiamondProxy"),
    
    PROXIABLE_PROXY("PROXIABLEProxy"),
    
    ZEPPELIN_OS_PROXY("ZeppelinOSProxy"),
    
    SEQUENCE_WALLET_PROXY("SequenceWalletProxy"),
    
    NULL("null");

    private String value;

    ProxyTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ProxyTypeEnum fromValue(String value) {
      for (ProxyTypeEnum b : ProxyTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PROXY_TYPE = "proxyType";
  private ProxyTypeEnum proxyType;

  public static final String JSON_PROPERTY_IMPLEMENTATIONS = "implementations";
  private List<ProxyResoltionImplementationsInner> implementations = new ArrayList<>();

  public static final String JSON_PROPERTY_PROXY_RESOLUTION_ERROR = "proxyResolutionError";
  private GenericErrorResponse proxyResolutionError;

  public ProxyResoltion() {
  }

  public ProxyResoltion isProxy(Boolean isProxy) {
    
    this.isProxy = isProxy;
    return this;
  }

  /**
   * Get isProxy
   * @return isProxy
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_PROXY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsProxy() {
    return isProxy;
  }


  @JsonProperty(JSON_PROPERTY_IS_PROXY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsProxy(Boolean isProxy) {
    this.isProxy = isProxy;
  }

  public ProxyResoltion proxyType(ProxyTypeEnum proxyType) {
    
    this.proxyType = proxyType;
    return this;
  }

  /**
   * Get proxyType
   * @return proxyType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROXY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProxyTypeEnum getProxyType() {
    return proxyType;
  }


  @JsonProperty(JSON_PROPERTY_PROXY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProxyType(ProxyTypeEnum proxyType) {
    this.proxyType = proxyType;
  }

  public ProxyResoltion implementations(List<ProxyResoltionImplementationsInner> implementations) {
    
    this.implementations = implementations;
    return this;
  }

  public ProxyResoltion addImplementationsItem(ProxyResoltionImplementationsInner implementationsItem) {
    if (this.implementations == null) {
      this.implementations = new ArrayList<>();
    }
    this.implementations.add(implementationsItem);
    return this;
  }

  /**
   * Get implementations
   * @return implementations
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPLEMENTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ProxyResoltionImplementationsInner> getImplementations() {
    return implementations;
  }


  @JsonProperty(JSON_PROPERTY_IMPLEMENTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImplementations(List<ProxyResoltionImplementationsInner> implementations) {
    this.implementations = implementations;
  }

  public ProxyResoltion proxyResolutionError(GenericErrorResponse proxyResolutionError) {
    
    this.proxyResolutionError = proxyResolutionError;
    return this;
  }

  /**
   * Get proxyResolutionError
   * @return proxyResolutionError
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROXY_RESOLUTION_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GenericErrorResponse getProxyResolutionError() {
    return proxyResolutionError;
  }


  @JsonProperty(JSON_PROPERTY_PROXY_RESOLUTION_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProxyResolutionError(GenericErrorResponse proxyResolutionError) {
    this.proxyResolutionError = proxyResolutionError;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProxyResoltion proxyResoltion = (ProxyResoltion) o;
    return Objects.equals(this.isProxy, proxyResoltion.isProxy) &&
        Objects.equals(this.proxyType, proxyResoltion.proxyType) &&
        Objects.equals(this.implementations, proxyResoltion.implementations) &&
        Objects.equals(this.proxyResolutionError, proxyResoltion.proxyResolutionError);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isProxy, proxyType, implementations, proxyResolutionError);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProxyResoltion {\n");
    sb.append("    isProxy: ").append(toIndentedString(isProxy)).append("\n");
    sb.append("    proxyType: ").append(toIndentedString(proxyType)).append("\n");
    sb.append("    implementations: ").append(toIndentedString(implementations)).append("\n");
    sb.append("    proxyResolutionError: ").append(toIndentedString(proxyResolutionError)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

