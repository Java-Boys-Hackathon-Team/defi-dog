package ru.javaboys.defidog.entity;

import io.jmix.core.entity.annotation.JmixGeneratedValue;
import io.jmix.core.metamodel.annotation.Comment;
import io.jmix.core.metamodel.annotation.JmixEntity;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;

import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

@JmixEntity
@Table(name = "SOURCE_CODE")
@Entity
public class SourceCode {
    @JmixGeneratedValue
    @Column(name = "ID", nullable = false)
    @Id
    private UUID id;

    @NotNull
    @Comment("Тип источника (GitHub, Etherscan, Sourcify, Bytecode)")
    @Column(name = "SOURCE_TYPE")
    private String sourceType;

    @Comment("URL к исходникам на GitHub")
    @Column(name = "REPO_URL")
    private String repoUrl;

    @Comment("Имя git-ветки в удаленном репозитории")
    @Column(name = "BRANCH")
    private String branch;

    @NotNull
    @Comment("Путь на диске к клонированному коду")
    @Column(name = "LOCAL_PATH")
    private String localPath;

    @Comment("Дата последнего обновления исходника")
    @Column(name = "FETCHED_AT")
    private OffsetDateTime fetchedAt;

    @Comment("Автоматически получен через Dedaub")
    @Column(name = "AUTO_GENERATED")
    private Boolean autoGenerated;

    @Comment("С какого коммита начинать сканирование безопасности")
    @Column(name = "SCAN_START_COMMIT_HASH")
    private String scanStartCommitHash;

    @OneToMany(mappedBy = "sourceCode")
    private List<SourceCodeChangeSet> sourceCodeChanges;

    @OneToMany(mappedBy = "sourceCode")
    private List<AbiChangeSet> abiChanges;

    @OneToMany(mappedBy = "sourceCode")
    private List<ScanTool> scanTools;

    @CreatedBy
    @Column(name = "CREATED_BY")
    private String createdBy;

    @CreatedDate
    @Column(name = "CREATED_DATE")
    private OffsetDateTime createdDate;

    @LastModifiedBy
    @Column(name = "LAST_MODIFIED_BY")
    private String lastModifiedBy;

    @LastModifiedDate
    @Column(name = "LAST_MODIFIED_DATE")
    private OffsetDateTime lastModifiedDate;

    public String getScanStartCommitHash() {
        return scanStartCommitHash;
    }

    public void setScanStartCommitHash(String scanStartCommitHash) {
        this.scanStartCommitHash = scanStartCommitHash;
    }

    public List<ScanTool> getScanTools() {
        return scanTools;
    }

    public void setScanTools(List<ScanTool> scanTools) {
        this.scanTools = scanTools;
    }

    public List<AbiChangeSet> getAbiChanges() {
        return abiChanges;
    }

    public void setAbiChanges(List<AbiChangeSet> abiChanges) {
        this.abiChanges = abiChanges;
    }

    public List<SourceCodeChangeSet> getSourceCodeChanges() {
        return sourceCodeChanges;
    }

    public void setSourceCodeChanges(List<SourceCodeChangeSet> sourceCodeChanges) {
        this.sourceCodeChanges = sourceCodeChanges;
    }

    public String getBranch() {
        return branch;
    }

    public void setBranch(String branch) {
        this.branch = branch;
    }

    public Boolean getAutoGenerated() {
        return autoGenerated;
    }

    public void setAutoGenerated(Boolean autoGenerated) {
        this.autoGenerated = autoGenerated;
    }

    public OffsetDateTime getFetchedAt() {
        return fetchedAt;
    }

    public void setFetchedAt(OffsetDateTime fetchedAt) {
        this.fetchedAt = fetchedAt;
    }

    public String getLocalPath() {
        return localPath;
    }

    public void setLocalPath(String localPath) {
        this.localPath = localPath;
    }

    public String getRepoUrl() {
        return repoUrl;
    }

    public void setRepoUrl(String repoUrl) {
        this.repoUrl = repoUrl;
    }

    public SourceType getSourceType() {
        return sourceType == null ? null : SourceType.fromId(sourceType);
    }

    public void setSourceType(SourceType sourceType) {
        this.sourceType = sourceType == null ? null : sourceType.getId();
    }

    public OffsetDateTime getLastModifiedDate() {
        return lastModifiedDate;
    }

    public void setLastModifiedDate(OffsetDateTime lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }

    public String getLastModifiedBy() {
        return lastModifiedBy;
    }

    public void setLastModifiedBy(String lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
    }

    public OffsetDateTime getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
    }

    public String getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    public UUID getId() {
        return id;
    }

    public void setId(UUID id) {
        this.id = id;
    }

}